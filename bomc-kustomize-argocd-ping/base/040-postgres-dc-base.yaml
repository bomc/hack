apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    app: postgres
    deploymentconfig: postgres
  template:
    metadata:
      labels:
        app: postgres
        deploymentconfig: postgres
    spec:
      containers:
      - name: postgres
        image: 172.30.1.1:5000/openshift/postgresql:9.6
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          protocol: TCP
        env:
        # Define the environment variable
        - name: POSTGRESQL_DATABASE
          valueFrom:
            configMapKeyRef:
              # The ConfigMap containing the value to assign to POSTGRESQL_DATABASE
              name: ping-cm
              # Specify the key associated with the value
              key: POSTGRESQL_DATABASE
        # Define the environment variable
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              # The secrets containing the value to assign to POSTGRES_DB_USER
              name: bomc-ping-secret
              # Specify the key associated with the value
              key: POSTGRES_DB_SECRETS_USER
        # Define the environment variable
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              # The secrets containing the value to assign to POSTGRES_DB_PASSWORD
              name: bomc-ping-secret
              # Specify the key associated with the value
              key: POSTGRES_DB_SECRETS_PASSWORD
              
              
              
              
              
              
              
 ---
kind: Template
apiVersion: v1
metadata:
  name: postgresql-ephemeral
  annotations:
    openshift.io/display-name: PostgreSQL (Ephemeral)
    description: 'PostgreSQL database service, without persistent storage. WARNING:
      Any data stored will be lost upon pod destruction.'
message: |-
  The following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.

         Username: ${POSTGRESQL_USER}
         Password: ${POSTGRESQL_PASSWORD}
    Database Name: ${POSTGRESQL_DATABASE}
   Connection URL: postgresql://${DATABASE_SERVICE_NAME}:5432/
labels:
  template: postgresql-ephemeral-template
objects:
- kind: Secret
  apiVersion: v1
  metadata:
    name: "${DATABASE_SERVICE_NAME}"
    annotations:
      template.openshift.io/expose-username: "{.data['database-user']}"
      template.openshift.io/expose-password: "{.data['database-password']}"
      template.openshift.io/expose-database_name: "{.data['database-name']}"
  stringData:
    database-user: "${POSTGRESQL_USER}"
    database-password: "${POSTGRESQL_PASSWORD}"
    database-name: "${POSTGRESQL_DATABASE}"
- kind: Service
  apiVersion: v1
  metadata:
    name: "${DATABASE_SERVICE_NAME}"
    annotations:
      template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
  spec:
    ports:
    - name: postgresql
      protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 0
    selector:
      name: "${DATABASE_SERVICE_NAME}"
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${DATABASE_SERVICE_NAME}"
    annotations:
      template.alpha.openshift.io/wait-for-ready: 'true'
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:${POSTGRESQL_VERSION}
          namespace: "${NAMESPACE}"
        lastTriggeredImage: ''
    - type: ConfigChange
    replicas: 1
    selector:
      name: "${DATABASE_SERVICE_NAME}"
    template:
      metadata:
        labels:
          name: "${DATABASE_SERVICE_NAME}"
      spec:
        containers:
        - name: postgresql
          image: registry.access.redhat.com/rhscl/postgresql-94-rhel7:latest
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 5
            exec:
              command:
              - "/usr/libexec/check-container"
          livenessProbe:
            timeoutSeconds: 10
            initialDelaySeconds: 120
            exec:
              command:
              - "/usr/libexec/check-container"
              - "--live"
          env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                name: "${DATABASE_SERVICE_NAME}"
                key: database-user
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${DATABASE_SERVICE_NAME}"
                key: database-password
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: "${DATABASE_SERVICE_NAME}"
                key: database-name
          resources:
            limits:
              memory: "${MEMORY_LIMIT}"
          volumeMounts:
          - name: "${DATABASE_SERVICE_NAME}-data"
            mountPath: "/var/lib/pgsql/data"
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: IfNotPresent
          capabilities: {}
          securityContext:
            capabilities: {}
            privileged: false
        volumes:
        - name: "${DATABASE_SERVICE_NAME}-data"
          emptyDir:
            medium: ''
        restartPolicy: Always
        dnsPolicy: ClusterFirst
  status: {}
parameters:
- name: MEMORY_LIMIT
  displayName: Memory Limit
  description: Maximum amount of memory the container can use.
  value: 512Mi
  required: true
- name: NAMESPACE
  displayName: Namespace
  description: The OpenShift Namespace where the ImageStream resides.
  value: openshift
- name: DATABASE_SERVICE_NAME
  displayName: Database Service Name
  description: The name of the OpenShift Service exposed for the database.
  value: postgresql
  required: true
- name: POSTGRESQL_USER
  displayName: PostgreSQL Connection Username
  description: Username for PostgreSQL user that will be used for accessing the database.
  generate: expression
  from: user[A-Z0-9]{3}
  required: true
- name: POSTGRESQL_PASSWORD
  displayName: PostgreSQL Connection Password
  description: Password for the PostgreSQL connection user.
  generate: expression
  from: "[a-zA-Z0-9]{16}"
  required: true
- name: POSTGRESQL_DATABASE
  displayName: PostgreSQL Database Name
  description: Name of the PostgreSQL database accessed.
  value: sampledb
  required: true
- name: POSTGRESQL_VERSION
  displayName: Version of PostgreSQL Image
  description: Version of PostgreSQL image to be used (latest).
  value: latest
  required: true
- name: ENVIRONMENT_KEY
  displayName: Environment Key
  description: "The environment key. (d0i, d0k, usw..)"
  value: tbd
  required: false  
