# Used in DatasourceProxyBeanPostProcessor, PersistenceH2Config and PersistencePostgresSqlConifg to determine the datasource name.
datasource.name=postgresDataSource

spring.datasource.platform=postgres

# Configure the postgres datasource.
# From configMap: POSTGRES_SERVICE : Host of PostgreSQL DB Server = postgres
# From configMap: POSTGRES_DB_NAME : PostgreSQL DB Name = bomcdb
# From secrets: POSTGRES_DB_USER : PostgreSQL Username
# From secrets: POSTGRES_DB_PASSWORD : PostgreSQL Password
driver.url=jdbc:postgresql://${POSTGRES_DB_SERVICE_NAME}:5432/${POSTGRES_DB_NAME}
driver.username=${POSTGRES_DB_USERNAME:db_default_user}
driver.password=${POSTGRES_DB_PASSWORD:db_default_password}

# Disabling contextual LOB creation as createClob()
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# ____________________________________________________
# Set in de.bomc.poc.hrm.interfaces.ApiDocumentationConfig to enable flexible port configuration for running in kubernetes.
bomc.swagger.host=192.168.99.110
bomc.swagger.port=31380

# Flyway properties: Set the migration script directory, default is '/db/migration'.
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate:false
spring.flyway.schemas=bomcdb

# Enables k8s functionality.
spring.cloud.kubernetes.config.name=hrm
spring.cloud.kubernetes.config.namespace=bomc-app
spring.cloud.kubernetes.config.sources[0].name=hrm
spring.cloud.kubernetes.reload.enabled=true
spring.cloud.kubernetes.reload.mode=polling
spring.cloud.kubernetes.reload.period=2000

management.endpoint.restart.enabled=true
management.endpoint.health.enabled=true
management.endpoint.info.enabled=true

# The base URL of the Keycloak server, required.
keycloak.auth-server-url=http://192.168.99.100:30080/auth
# The value matches the clientId that has to be named in the admin console.
keycloak.resource=bomc-hrm-app
# The realm name which has to be created in the Keycloak admin console, required.
keycloak.realm=bomc-hrm-realm
# Establishes if communications with the Keycloak server must happen over HTTPS. 
# Here, it's set to external, meaning that it's only needed for external requests 
# (default value). In production, instead, it should set to all. Optional;
keycloak.ssl-required=external
# Prevents the application from sending credentials to the Keycloak server 
# (false is the default value). It has to be set to true whenever public clients are
# used instead of confidential. Optional;
keycloak.public-client=true
# The attribute with which to populate the UserPrincipal name. Optional.
keycloak.principal-attribute=preferred_username
# Disable the Keycloak Spring Boot Adapter (for example in tests) with false.  
keycloak.enabled=true
keycloak.cors=true

# Security constraints
#  -The given security restraints state ensure every request to /customers/* will only 
#   be authorized if the one requesting it's an authenticated user with the 
#   role 'user'.
# --------- hm -securityConstraints
#keycloak.security-constraints[0].authRoles[0]=bomc-user
#keycloak.security-constraints[0].authRoles[1]=bomc-admin
#keycloak.security-constraints[0].securityCollections[0].name=bomc-user resources
#keycloak.security-constraints[0].securityCollections[0].patterns[0]=ui/customer

#keycloak.securityConstraints[1].authRoles[0]=bomc-admin
#keycloak.securityConstraints[1].securityCollections[0].name=bomc-admin resources
#keycloak.securityConstraints[1].securityCollections[0].patterns[0]=ui/customer/customers

keycloak.securityConstraints[0].authRoles[0]=bomc-admin
keycloak.securityConstraints[0].authRoles[1]=bomc-user
keycloak.securityConstraints[0].securityCollections[0].name=bomc-admin resources
keycloak.securityConstraints[0].securityCollections[0].patterns[0]=/ui/customer/customers

#server.use-forward-headers=true
